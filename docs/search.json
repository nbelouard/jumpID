[{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"aim-and-setup","dir":"Articles","previous_headings":"","what":"Aim and setup","title":"#1: Isolating dispersal jumps and diffusive spread","text":"spread invasive species due diffusive spread human-assisted jump dispersal, often caused species hitchhiking vehicles. aim vignette differentiate diffusive spread jump dispersal invasive species based occurrence data. identification required development directional analysis species presence. demonstrate method using occurrence data spotted lanternfly, Lycorma delicatula, invasive Hemiptera United States.","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"data-overlook","dir":"Articles","previous_headings":"","what":"1. Data overlook","title":"#1: Isolating dispersal jumps and diffusive spread","text":"SLF dataset available lydemapr companion package. download_data folder, v2_2023 subfolder, download lyde_data_v2.zip file place data folder local jumpID project. date vignette written, lydemapr contains data year 2022. load dataset contains occurrences spotted lanternfly, take look . dataset contains 831,039 rows, corresponding SLF survey specific date location. columns using : * bio_year: biological year occurrence (see lydemapr description difference year bio_year) * latitude longitude (XY coordinates). precise location SLF surveys summarized 1-km² cells. coordinates WGS84 (EPSG 4326) * lyde_established: whether established SLF population found survey (least two live individuals egg mass, see lydemapr)","code":"##   bio_year latitude longitude lyde_established ## 1     2015 40.41441 -75.65882            FALSE ## 2     2016 40.33333 -75.63529            FALSE ## 3     2016 40.36036 -75.48235            FALSE ## 4     2016 40.36937 -75.62353            FALSE ## 5     2016 40.37838 -75.71765            FALSE ## 6     2016 40.47748 -75.62353            FALSE"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"data-formatting","dir":"Articles","previous_headings":"","what":"2. Data formatting","title":"#1: Isolating dispersal jumps and diffusive spread","text":"First, use jumpID package, need rename columns generic names expected package. also remove rows SLF establishment NA. Second, multiple surveys sometimes conducted location year, resulting redundant dataset purpose analysis. summarize information available location every year, row now represents detection status location given year. Note: several surveys indicate SLF “present” year location, tempting categorize SLF “established”. However, category “present” often refers dead individuals, although information explicitly available. use conservative approach consider SLF established cell one surveys considered established. dataset now 123,532 rows, corresponding 1280 x 1596 cells. Let’s look data map.  Cells predominantly surveyed Eastern US, also cells surveyed parts US, starting 2019. Positive cells (established SLF) Eastern US, maps zoomed Eastern US . Every year, large number cells surveyed positive (SLF established) negative results (SLF established). zoomed-map allows see cell grid.  progression invasion measured starting introduction point documented Barringer et al. 2015. store coordinates introduction point object next analyses. precise introduction point unknown, may replaced centroid invasion time invasive species discovered invasive range. finish preparing dataset analysis, calculate distance survey cell introduction point. dataset now ready jump analysis.","code":"slf %<>% rename(year = bio_year,                 established = lyde_established) %>%    filter(is.na(established) == F) grid_data <- slf %>%   dplyr::group_by(year, latitude, longitude) %>%   dplyr::summarise(established = any(established)) %>%    ungroup() ## `summarise()` has grouped output by 'year', 'latitude'. You can override using ## the `.groups` argument. head(grid_data) ## # A tibble: 6 × 4 ##    year latitude longitude established ##   <int>    <dbl>     <dbl> <lgl>       ## 1  2014     39.8     -76.8 FALSE       ## 2  2014     39.8     -76.3 FALSE       ## 3  2014     39.8     -76.4 FALSE       ## 4  2014     39.9     -76.6 FALSE       ## 5  2014     39.9     -76.9 FALSE       ## 6  2014     39.9     -76.5 FALSE # Coordinates of the introduction site, extracted from Barringer et al. 2015 # As a table (for distance calculations): centroid_df <- data.frame(longitude = -75.675340,                          latitude = 40.415240)    # Replace by the centroid of the invasion in the first years of the invasion if the  # introduction point is unknown: # centroid_df <- slf %>% filter(year == 2014) %>% #   summarise(latitude = mean(.$latitude), #             longitude = mean(.$longitude)) grid_data %<>%    dplyr::mutate(DistToIntro = geosphere::distGeo(grid_data[,c('longitude','latitude')],                                                  centroid_df[,c('longitude', 'latitude')])/1000)  # the distance is obtained in meters, and we divide it by 1000 to obtain kilometers  # given the scale of this invasion.  head(grid_data) ## # A tibble: 6 × 5 ##    year latitude longitude established DistToIntro ##   <int>    <dbl>     <dbl> <lgl>             <dbl> ## 1  2014     39.8     -76.8 FALSE             121.  ## 2  2014     39.8     -76.3 FALSE              83.7 ## 3  2014     39.8     -76.4 FALSE              90.4 ## 4  2014     39.9     -76.6 FALSE             101.  ## 5  2014     39.9     -76.9 FALSE             121.  ## 6  2014     39.9     -76.5 FALSE              92.2"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"differentiating-diffusive-spread-and-jump-dispersal-principle","dir":"Articles","previous_headings":"","what":"3. Differentiating diffusive spread and jump dispersal: principle","title":"#1: Isolating dispersal jumps and diffusive spread","text":"set four successive functions run separate cells SLF established due continuous, diffusive spread, cells SLF established due jump dispersal. first run functions tentative set parameters understand analysis works. optimization parameters described later vignette.","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"a--attribute_sectors","dir":"Articles","previous_headings":"3. Differentiating diffusive spread and jump dispersal: principle","what":"a- attribute_sectors()","title":"#1: Isolating dispersal jumps and diffusive spread","text":"Considering expansion invasion heterogeneous space, jump analyses requires invasion range divided sectors introduction site origin. first function, attribute_sectors() attributes sector number cell dataset, used jump analysis. , divide invasion range 16 sectors. See vignette #2 “Decreasing calculation time” learn changing number sectors may make analysis faster.  jump analysis go sector successively.","code":"grid_data_sectors <- jumpID::attribute_sectors(dataset = grid_data,                                                   # dataset to be explored                              nb_sectors = 16,                               # number of sectors to divide the invasion range                              centroid = c(-75.675340, 40.415240)                              # vector containing the centroid coordinates as long/lat                              ) ## 2024-08-22 14:34:47.474122 Start sector attribution... Sector attribution completed."},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"b--find_thresholds","dir":"Articles","previous_headings":"3. Differentiating diffusive spread and jump dispersal: principle","what":"b- find_thresholds()","title":"#1: Isolating dispersal jumps and diffusive spread","text":"function find_thresholds() search first discontinuity SLF distribution. Points sorted increasing distance introduction point, function goes consecutive pair points, starting introduction point going outwards. stops identifies distance larger defined gap_size two consecutive points, marking discontinuity SLF distribution. last point discontinuity marks putative limit diffusive spread. function runs independently sector. considered populations go extinct, data cumulated time. limit diffusive spread go back towards introduction point time. input dataset output attribute_sectors(). gap_size parameter defines minimal distance two consecutive points marks discontinuity SLF distribution, km. example, set 15 km. option “negatives” set TRUE (default), function check negative surveys discontinuity, absence SLF established due absence surveys area.  map, blue points indicate invasion front identified find_thresholds(), .e., limits diffusive spread every direction, every year. point analysis, points farther thresholds stored potential jumps (green points).","code":"gap_size = 15   Results_thresholds <- jumpID::find_thresholds(dataset = grid_data_sectors,                                                  gap_size = gap_size,                                                  negatives = T) ## 2024-08-22 14:35:00.539064 Start finding thresholds... Sector 1/16...  2/16...  3/16...  4/16...  5/16...  6/16...  7/16...  8/16...  9/16...  10/16...  11/16...  12/16...  13/16...  14/16...  15/16...  16/16 ## Threshold analysis done. 4243 potential jumps were found. # Resulting objects are #- Results_thresholds$preDist, a data frame of threshold cells = extreme points of the  # diffusive spread. Will be completed in find_secDiff() #- Results_thresholds$potJumps, a data frame of potential jumps. Will be # pruned in find_jumps()"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"c--find_jumps","dir":"Articles","previous_headings":"3. Differentiating diffusive spread and jump dispersal: principle","what":"c- find_jumps()","title":"#1: Isolating dispersal jumps and diffusive spread","text":"function find_jumps() prunes list potential jumps cells less  positive cell previous year, species likely spread cell. final list jumps obtained object Jumps.  analysis may stopped dispersal jumps biological interest. complement, secondary diffusion may examined last function, find_secDiff().","code":"Results_jumps <- jumpID::find_jumps(grid_data = grid_data,                         potJumps = Results_thresholds$potJumps,                        gap_size = gap_size) ## 2024-08-22 14:41:08.43217 Start finding jumps... Year 2014 ... Year 2015 ... Year 2016 ... Year 2017 ... Year 2018 ... Year 2019 ... Year 2020 ... Year 2021 ... Year 2022 ... Jump analysis done. 387 jumps were identified. # Resulting objects are: #- Results_jumps$Jumps, a data frame containing all jumps #- Results_jumps$diffusers, a data frame of positive cells stemming from diffusive spread #- Results_jumps$potDiffusion, a data frame of remaining cells, containing a mix of  # secondary diffusion and additional threshold points. Will be pruned in find_secDiff()"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"d--find_secdiff","dir":"Articles","previous_headings":"3. Differentiating diffusive spread and jump dispersal: principle","what":"d- find_secDiff()","title":"#1: Isolating dispersal jumps and diffusive spread","text":"Cells discarded jump list either additional threshold points secondary diffusion previous jump. find_secDiff() attributes correct category checking whether close previous jump, diffusion point.","code":"Results_secDiff <- jumpID::find_secDiff(potDiffusion = Results_jumps$potDiffusion,                                 Jumps = Results_jumps$Jumps,                                 diffusers = Results_jumps$diffusers,                                 Dist = Results_thresholds$preDist,                                 gap_size = gap_size) ## 2024-08-22 14:41:53.572058 Start finding secondary diffusion... Year 2017 ...Year 2018 ...Year 2019 ...Year 2020 ...Year 2021 ...Year 2022 ...Analysis of secondary diffusion done. # Resulting objects are: #- Results_secDiff$secDiff, a data frame of all cells that are secondary diffusion  # from a previous jump #- Results_secDiff$Dist, a data frame of all extreme points on the invasion front (thresholds)"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"wrapper-for-jump-analysis","dir":"Articles","previous_headings":"","what":"4. Wrapper for jump analysis","title":"#1: Isolating dispersal jumps and diffusive spread","text":"analyses can done one instance using wrapper function. plot results map.","code":"jumps_wrapper <- jumpID::find_jumps_wrapper(dataset = grid_data,                                                nb_sectors = 16,                                               centroid = c(-75.675340, 40.415240),                                               gap_size = 15,                                               negatives = T) ## 2024-08-22 14:43:16.131378 Start sector attribution... Sector attribution completed.  ## 2024-08-22 14:43:16.164782 Start finding thresholds... Sector 1/16...  2/16...  3/16...  4/16...  5/16...  6/16...  7/16...  8/16...  9/16...  10/16...  11/16...  12/16...  13/16...  14/16...  15/16...  16/16 ## Threshold analysis done. 4243 potential jumps were found.  ## 2024-08-22 14:49:13.378279 Start finding jumps... Year 2014 ... Year 2015 ... Year 2016 ... Year 2017 ... Year 2018 ... Year 2019 ... Year 2020 ... Year 2021 ... Year 2022 ... Jump analysis done. 387 jumps were identified. ## 2024-08-22 14:49:39.405896 Start finding secondary diffusion... Year 2017 ...Year 2018 ...Year 2019 ...Year 2020 ...Year 2021 ...Year 2022 ...Analysis of secondary diffusion done."},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"rarefy-jump-clusters","dir":"Articles","previous_headings":"","what":"5. Rarefy jump clusters","title":"#1: Isolating dispersal jumps and diffusive spread","text":"jumps clustered area. Jump clusters may stem independent dispersal jumps, .e. SLF hitchhiked multiple times locations year. Alternatively, jump clusters may result SLF quickly spreading around single dispersal jump. Finally, can mix two hypotheses. identify jump clusters better understand jump locations. First, delineate jump clusters jumps located less gap size . Check many points per jump cluster.","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"a--group_jumps","dir":"Articles","previous_headings":"5. Rarefy jump clusters","what":"a- group_jumps()","title":"#1: Isolating dispersal jumps and diffusive spread","text":"","code":"Jump_groups <- jumpID::group_jumps(Jumps, gap_size = 15) ## `summarise()` has grouped output by 'year'. You can override using the ## `.groups` argument. ## `summarise()` has grouped output by 'year'. You can override using the ## `.groups` argument. ## # A tibble: 6 × 2 ##    year mean_njumps ##   <int>       <dbl> ## 1  2017        1.5  ## 2  2018        8.29 ## 3  2019        4.23 ## 4  2020        1.65 ## 5  2021        2.28 ## 6  2022        2.41"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"b--rarefy_groups","dir":"Articles","previous_headings":"5. Rarefy jump clusters","what":"b- rarefy_groups()","title":"#1: Isolating dispersal jumps and diffusive spread","text":"summarize jump cluster summarizing central point.  387 jumps rarefied 152 jump clusters.","code":"Jump_clusters <- jumpID::rarefy_groups(Jump_groups) %>%   dplyr::mutate(Rarefied = TRUE)"},{"path":"https://nbelouard.github.io/jumpID/articles/010_Jump_list.html","id":"data-is-ready-for-biological-analysis-and-interpretation","dir":"Articles","previous_headings":"","what":"6. Data is ready for biological analysis and interpretation!","title":"#1: Isolating dispersal jumps and diffusive spread","text":"– end vignette –","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"aim-and-setup","dir":"Articles","previous_headings":"","what":"Aim and setup","title":"#1B Creating the figures associated with the jump analysis","text":"vignette computes figures included manuscript associated jumpID package. vignette requires loading data frames generated first vignette package. Load files generated previous vignette","code":"slf <- read.csv(file.path(here::here(), \"data\", \"lyde_data_v2\", \"lyde.csv\"), h=T) grid_data <- read.csv(file.path(here::here(), \"exported-data\", \"grid_data.csv\"), h=T) centroid <- data.frame(longitude_rounded = -75.675340, latitude_rounded = 40.415240)  Jumps <- read.csv(file.path(here::here(), \"exported-data\", \"jumps.csv\")) Jump_clusters <- read.csv(file.path(here::here(), \"exported-data\", \"jump_clusters.csv\")) Thresholds <- read.csv(file.path(here::here(), \"exported-data\", \"thresholds.csv\")) diffusion <- read.csv(file.path(here::here(), \"exported-data\", \"diffusion.csv\")) secDiffusion <- read.csv(here::here(\"exported-data\", \"secdiffusion.csv\"))"},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"a-jump-map","dir":"Articles","previous_headings":"Figure 2: Faceted jump map, barplot & distance","what":"2A: jump map","title":"#1B Creating the figures associated with the jump analysis","text":"Map position jumps identify jump clusters per year","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"b-number-of-jumps-per-year-bar-plot","dir":"Articles","previous_headings":"Figure 2: Faceted jump map, barplot & distance","what":"2B: number of jumps per year bar plot","title":"#1B Creating the figures associated with the jump analysis","text":"Count many jumps per year","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"c-distance-of-jumps-box-plot","dir":"Articles","previous_headings":"Figure 2: Faceted jump map, barplot & distance","what":"2C: distance of jumps box plot","title":"#1B Creating the figures associated with the jump analysis","text":"calculate distance invasion front jumps every year","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"d-evolution-of-jump-distances","dir":"Articles","previous_headings":"Figure 2: Faceted jump map, barplot & distance","what":"2D Evolution of jump distances","title":"#1B Creating the figures associated with the jump analysis","text":"Linear model statistical test","code":"# generate model model <- lm(log(DistToFront) ~ year, data = Jump_clusters) # look at residuals hist(model$residuals) # look at results summary(model) ##  ## Call: ## lm(formula = log(DistToFront) ~ year, data = Jump_clusters) ##  ## Residuals: ##      Min       1Q   Median       3Q      Max  ## -1.41134 -0.74153 -0.09242  0.61409  1.92588  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|) ## (Intercept) -38.04036  115.38662  -0.330    0.742 ## year          0.02087    0.05711   0.365    0.715 ##  ## Residual standard error: 0.8217 on 150 degrees of freedom ## Multiple R-squared:  0.0008896,  Adjusted R-squared:  -0.005771  ## F-statistic: 0.1336 on 1 and 150 DF,  p-value: 0.7153"},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"figure-3-invasion-radius","dir":"Articles","previous_headings":"","what":"Figure 3: Invasion radius","title":"#1B Creating the figures associated with the jump analysis","text":"estimate spread SLF, extract year radius invasion sector. can look radius invasion increases time, differentiating diffusive spread jump dispersal. Test difference invasion radius spread types  Calculate yearly increase invasion radius","code":"# generate model model <- lm(log(maxDistToIntro) ~ year*Type, data = radiusData) # look at residuals hist(model$residuals, breaks = 30) # look at results anova(model) ## Analysis of Variance Table ##  ## Response: log(maxDistToIntro) ##            Df Sum Sq Mean Sq   F value    Pr(>F)     ## year        1 552.44  552.44 1510.4347 < 2.2e-16 *** ## Type        1   2.92    2.92    7.9834  0.005058 **  ## year:Type   1   1.89    1.89    5.1753  0.023661 *   ## Residuals 282 103.14    0.37                         ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 # All spread: meanRadius %>% filter(Type == \"All spread\") %>%    mutate(radiusIncrease = c(NA, diff(mean))) %>%    summarise(mean = mean(radiusIncrease, na.rm = T),             sd = sd(radiusIncrease, na.rm = T)) ## # A tibble: 1 × 2 ##    mean    sd ##   <dbl> <dbl> ## 1  41.3  23.6 # Invasion front: meanRadius %>% filter(Type == \"Invasion front\") %>%    mutate(radiusIncrease = c(NA, diff(mean))) %>%    summarise(mean = mean(radiusIncrease, na.rm=T),             sd = sd(radiusIncrease, na.rm = T)) ## # A tibble: 1 × 2 ##    mean    sd ##   <dbl> <dbl> ## 1  25.1  11.4"},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"figure-s1-map-all-points","dir":"Articles","previous_headings":"Supplementary figures","what":"Figure S1: Map all points","title":"#1B Creating the figures associated with the jump analysis","text":"Facet : Overview SLF surveys  Facet B: Zoomed map established SLF","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"figure-s2-visualizing-jumps-thresholds-and-secdiff","dir":"Articles","previous_headings":"Supplementary figures","what":"Figure S2: Visualizing Jumps, Thresholds, and SecDiff","title":"#1B Creating the figures associated with the jump analysis","text":"Visualize results, faceted year","code":""},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"s3a-map","dir":"Articles","previous_headings":"Figure S3: secondary diffusion","what":"S3A: Map","title":"#1B Creating the figures associated with the jump analysis","text":"Map points identified secondary diffusion around dispersal jumps.","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"s3b-secondary-diffusion-bar-plot","dir":"Articles","previous_headings":"Figure S3: secondary diffusion","what":"S3B: Secondary diffusion Bar Plot","title":"#1B Creating the figures associated with the jump analysis","text":"Count many jumps followed secondary diffusion","code":""},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/articles/011_Figures_jump_list.html","id":"figure-s4-sampling-effort","dir":"Articles","previous_headings":"Figure S3: secondary diffusion","what":"Figure S4: Sampling effort","title":"#1B Creating the figures associated with the jump analysis","text":"Show evolution sampling effort jump occurrences time – end vignette –","code":""},{"path":"https://nbelouard.github.io/jumpID/articles/020_Decreasing_calculation_time.html","id":"aim-and-setup","dir":"Articles","previous_headings":"","what":"Aim and setup","title":"#2: Decreasing calculation time","text":"case extremely large species occurrence datasets, may take long time run analyses. number sectors provide accurate results. However, computational time may decreased increasing number sectors considered. higher number sectors, larger invasion radius points compared pairs find_thresholds, fewer distances need calculated. However, lower number sectors, better pre-identification spatial discontinuities pruned list potential jumps, faster find_jumps. lowest computational time therefore obtained trade-dataset size, invasion radius, number sectors. demonstrate effect number sectors computational time SLF dataset. Load grid data created first vignette","code":"grid_data <- read.csv(file.path(here::here(), \"exported-data\", \"grid_data.csv\"))"},{"path":"https://nbelouard.github.io/jumpID/articles/020_Decreasing_calculation_time.html","id":"compare-calculation-times","dir":"Articles","previous_headings":"","what":"Compare calculation times","title":"#2: Decreasing calculation time","text":"Run jumpID functions successively 16, 40, 80 sectors compare computation times. dataset, computational times decreased dividing space 40 sectors instead 16. Data dense enough dividing space 80 sectors, indicated multiple warning messages find_threshold. – end vignette –","code":"## [1] \"Sectors: 16\" ## 2024-08-22 14:53:41.64369 Start sector attribution... Sector attribution completed.  ## 2024-08-22 14:53:41.686407 Start finding thresholds... Sector 1/16...  2/16...  3/16...  4/16...  5/16...  6/16...  7/16...  8/16...  9/16...  10/16...  11/16...  12/16...  13/16...  14/16...  15/16...  16/16 ## Threshold analysis done. 4243 potential jumps were found.  ## 2024-08-22 14:59:53.712392 Start finding jumps... Year 2014 ... Year 2015 ... Year 2016 ... Year 2017 ... Year 2018 ... Year 2019 ... Year 2020 ... Year 2021 ... Year 2022 ... Jump analysis done. 387 jumps were identified. ## 2024-08-22 15:00:15.857648 Start finding secondary diffusion... Year 2017 ...Year 2018 ...Year 2019 ...Year 2020 ...Year 2021 ...Year 2022 ...Analysis of secondary diffusion done.  ## [1] \"Sectors: 40\" ## 2024-08-22 15:01:23.338102 Start sector attribution... Sector attribution completed.  ## 2024-08-22 15:01:23.357757 Start finding thresholds... Sector 1/40...  2/40...  3/40...  4/40...  5/40...  6/40...  7/40...  8/40...  9/40...  10/40...  11/40...  12/40...  13/40...  14/40...  15/40...  16/40...  17/40...  18/40...  19/40...  20/40...  21/40...  22/40...  23/40...  24/40...  25/40...  26/40...  27/40...  28/40...  29/40...  30/40...  31/40...  32/40...  33/40...  34/40...  35/40...  36/40...  37/40...  38/40...  39/40...  40/40 ## Threshold analysis done. 3747 potential jumps were found.  ## 2024-08-22 15:03:14.950368 Start finding jumps... Year 2014 ... Year 2015 ... Year 2016 ... Year 2017 ... Year 2018 ... Year 2019 ... Year 2020 ... Year 2021 ... Year 2022 ... Jump analysis done. 387 jumps were identified. ## 2024-08-22 15:03:36.875957 Start finding secondary diffusion... Year 2016 ...Year 2017 ...Year 2018 ...Year 2019 ...Year 2020 ...Year 2021 ...Year 2022 ...Analysis of secondary diffusion done.  ## [1] \"Sectors: 80\" ## 2024-08-22 15:04:21.741394 Start sector attribution... Sector attribution completed.  ## 2024-08-22 15:04:21.760537 Start finding thresholds... Sector 1/80...  2/80...  3/80...  4/80...  5/80...  6/80...  7/80...  8/80...  9/80...  10/80...  11/80...  12/80...  13/80...  14/80...  15/80...  16/80...  17/80...  18/80...  19/80...  20/80...  21/80...  22/80...  23/80... Warning: no negative survey in the gap identified in sector 23 and year 2021 after 106 km. The spatial discontinuity that is identified may be due to few surveys done in this area, or space divided into too many sectors. Consider decreasing the number of sectors  ## Warning: no negative survey in the gap identified in sector 23 and year 2022 after 106 km. The spatial discontinuity that is identified may be due to few surveys done in this area, or space divided into too many sectors. Consider decreasing the number of sectors  ##  24/80...  25/80...  26/80...  27/80...  28/80...  29/80...  30/80...  31/80...  32/80...  33/80... Warning: no negative survey in the gap identified in sector 33 and year 2019 after 113 km. The spatial discontinuity that is identified may be due to few surveys done in this area, or space divided into too many sectors. Consider decreasing the number of sectors  ## Warning: no negative survey in the gap identified in sector 33 and year 2020 after 113 km. The spatial discontinuity that is identified may be due to few surveys done in this area, or space divided into too many sectors. Consider decreasing the number of sectors  ##  34/80...  35/80...  36/80...  37/80...  38/80...  39/80...  40/80...  41/80...  42/80...  43/80...  44/80...  45/80...  46/80...  47/80...  48/80...  49/80...  50/80...  51/80...  52/80...  53/80...  54/80...  55/80...  56/80...  57/80...  58/80...  59/80...  60/80...  61/80...  62/80...  63/80...  64/80...  65/80...  66/80...  67/80...  68/80...  69/80...  70/80...  71/80...  72/80...  73/80...  74/80...  75/80...  76/80...  77/80...  78/80...  79/80...  80/80 ## Threshold analysis done. 5034 potential jumps were found.  ## 2024-08-22 15:04:40.929554 Start finding jumps... Year 2014 ... Year 2015 ... Year 2016 ... Year 2017 ... Year 2018 ... Year 2019 ... Year 2020 ... Year 2021 ... Year 2022 ... Jump analysis done. 387 jumps were identified. ## 2024-08-22 15:05:14.605223 Start finding secondary diffusion... Year 2016 ...Year 2017 ...Year 2018 ...Year 2019 ...Year 2020 ...Year 2021 ...Year 2022 ...Analysis of secondary diffusion done. ##    s potJumps Jumps    Total_time ## 1 16     4243   387 7.694898 mins ## 2 40     3747   387 2.973373 mins ## 3 80     5034   387 2.109599 mins"},{"path":"https://nbelouard.github.io/jumpID/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nadège Belouard. Author, maintainer.","code":""},{"path":"https://nbelouard.github.io/jumpID/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Belouard N (2024). jumpID: Identify jump dispersal biological invasions. R package version 1.0, https://nbelouard.github.io/jumpID/.","code":"@Manual{,   title = {jumpID: Identify jump dispersal in biological invasions},   author = {Nadège Belouard},   year = {2024},   note = {R package version 1.0},   url = {https://nbelouard.github.io/jumpID/}, }"},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Identify jump dispersal in biological invasions","text":"dispersal events occur short distances result continuous species range, human-assisted dispersal promotes occurrence dispersal “jumps”, establishment satellite populations away core invasion. Distinguishing diffusive spread jump dispersal important understand process invasion, evolution, also take efficient management measures. directional analysis species occurrence data, jumpID R package differentiates diffusive spread dispersal jumps biological invasions, identifies secondary diffusion stemming dispersal jumps. jumpID presented GitHub R package applied example invasion spotted lanternfly United States.  spotted lanternfly, Lycorma delicatula (hereafter SLF) insect China invasive pest US. Since initial detection SLF Pennsylvania 2014, large-scale surveys conducted trace progression invasion. unique dataset summarizing SLF presence absence US available lydemapr R package constitutes opportunity study spread SLF. Use package identify analyze dispersal jumps, diffusive spread secondary diffusion biological invasions.","code":""},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/index.html","id":"if-you-wish-to-visualize-the-tutorial-only","dir":"","previous_headings":"Installation","what":"If you wish to visualize the tutorial only","title":"Identify jump dispersal in biological invasions","text":"2 options: * Access “Articles” tab jumpID GitHub website * Download PDF tutorial vignettes folder jumpID GitHub repository","code":""},{"path":"https://nbelouard.github.io/jumpID/index.html","id":"if-you-wish-to-install-the-package-and-execute-the-tutorial","dir":"","previous_headings":"Installation","what":"If you wish to install the package and execute the tutorial","title":"Identify jump dispersal in biological invasions","text":"R terminal tab, cd folder want store project, type: Access content package opening jumpID.Rproj file Rstudio. Install jumpID typing R console: Finally, open tutorial file (.Rmd) vignettes folder, execute code chunks.","code":"git clone https://github.com/nbelouard/jumpID.git devtools::install()"},{"path":"https://nbelouard.github.io/jumpID/index.html","id":"if-you-wish-to-use-the-package-functions-only-without-using-the-tutorial","dir":"","previous_headings":"Installation","what":"If you wish to use the package functions only, without using the tutorial","title":"Identify jump dispersal in biological invasions","text":"Install package typing following line code R console: functions now ready use, help file accessible typing ?function_name.","code":"devtools::install_github(\"nbelouard/jumpID\", dependencies = TRUE) library(jumpID)"},{"path":"https://nbelouard.github.io/jumpID/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Identify jump dispersal in biological invasions","text":"N. Belouard, S. De Bona, M.R. Helmus, .G. Smith, J.E. Behm, 2024. Identifying jump dispersal locations occurrence data invasive species spread: case spotted lanternfly Lycorma delicatula. https://ieco-lab.github.io/jumpID","code":""},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/Readme.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"jumpID, an R package to differentiate diffusive spread and dispersal jumps in biological invasions","text":"dispersal events occur short distances result continuous species range, human-assisted dispersal promotes occurrence dispersal “jumps”, establishment satellite populations away core invasion. Distinguishing diffusive spread jump dispersal important understand process invasion, evolution, also take efficient management measures. directional analysis species occurrence data, jumpID R package differentiates diffusive spread dispersal jumps biological invasions, identifies secondary diffusion stemming dispersal jumps. jumpID presented GitHub R package applied example invasion spotted lanternfly United States.  spotted lanternfly, Lycorma delicatula (hereafter SLF) insect China invasive pest US. Since initial detection SLF Pennsylvania 2014, large-scale surveys conducted trace progression invasion. unique dataset summarizing SLF presence absence US available lydemapr R package constitutes opportunity study spread SLF. Use package identify analyze dispersal jumps, diffusive spread secondary diffusion biological invasions.","code":""},{"path":[]},{"path":"https://nbelouard.github.io/jumpID/Readme.html","id":"if-you-wish-to-visualize-the-tutorial-only","dir":"","previous_headings":"Installation","what":"If you wish to visualize the tutorial only","title":"jumpID, an R package to differentiate diffusive spread and dispersal jumps in biological invasions","text":"2 options: * Access “Articles” tab jumpID GitHub website * Download PDF tutorial vignettes folder jumpID GitHub repository","code":""},{"path":"https://nbelouard.github.io/jumpID/Readme.html","id":"if-you-wish-to-install-the-package-and-execute-the-tutorial","dir":"","previous_headings":"Installation","what":"If you wish to install the package and execute the tutorial","title":"jumpID, an R package to differentiate diffusive spread and dispersal jumps in biological invasions","text":"R terminal tab, cd folder want store project, type: Access content package opening jumpID.Rproj file Rstudio. Install jumpID typing R console: Finally, open tutorial file (.Rmd) vignettes folder, execute code chunks.","code":"git clone https://github.com/nbelouard/jumpID.git devtools::install()"},{"path":"https://nbelouard.github.io/jumpID/Readme.html","id":"if-you-wish-to-use-the-package-functions-only-without-using-the-tutorial","dir":"","previous_headings":"Installation","what":"If you wish to use the package functions only, without using the tutorial","title":"jumpID, an R package to differentiate diffusive spread and dispersal jumps in biological invasions","text":"Install package typing following line code R console: functions now ready use, help file accessible typing ?function_name.","code":"devtools::install_github(\"nbelouard/jumpID\", dependencies = TRUE) library(jumpID)"},{"path":"https://nbelouard.github.io/jumpID/Readme.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"jumpID, an R package to differentiate diffusive spread and dispersal jumps in biological invasions","text":"N. Belouard, S. De Bona, M.R. Helmus, .G. Smith, J.E. Behm, 2024. Identifying jump dispersal locations occurrence data invasive species spread: case spotted lanternfly Lycorma delicatula. https://ieco-lab.github.io/jumpID","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/attribute_sectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine sectors for each occurrence point — attribute_sectors","title":"Determine sectors for each occurrence point — attribute_sectors","text":"full circle 2*pi, sector point determined atan2(y,x), angle point relative horizontal line introduction site","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/attribute_sectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine sectors for each occurrence point — attribute_sectors","text":"","code":"attribute_sectors(dataset, nb_sectors = 8, centroid = c(-75.67534, 40.41524))"},{"path":"https://nbelouard.github.io/jumpID/reference/attribute_sectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine sectors for each occurrence point — attribute_sectors","text":"dataset dataset processed nb_sectors Number sectors divide invasion space (default: 8) centroid Coordinates centroid center circle (long, lat; default: -75.675340, 40.415240)","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/attribute_sectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine sectors for each occurrence point — attribute_sectors","text":"table dataset additional columns: sectors containing total number sectors considered, sectors_nb containing sector number attributed cell","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/attribute_sectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine sectors for each occurrence point — attribute_sectors","text":"","code":"if (FALSE) { # \\dontrun{ new_dataset <- attribute_sectors(dataset) } # }"},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps.html","id":null,"dir":"Reference","previous_headings":"","what":"Find dispersal jumps — find_jumps","title":"Find dispersal jumps — find_jumps","text":"Find dispersal jumps applied find_thresholds(). Prune points selected due sector limits secondary diffusion.","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find dispersal jumps — find_jumps","text":"","code":"find_jumps(grid_data = grid_data, potJumps = potJumps, gap_size = 15)"},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find dispersal jumps — find_jumps","text":"grid_data data frame unique points processed, .e., initial grid_data table potJumps data frame potential jumps refined, resulting find_thresholds() gap_size Distance invasion front positive point necessary considered jump, kilometers (default: 15)","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find dispersal jumps — find_jumps","text":"Two data frames: Jumps containing list jumps, potSecDiff containing potential secondary diffusion processed using find_secDiff()","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find dispersal jumps — find_jumps","text":"","code":"if (FALSE) { # \\dontrun{ jumps <- find_jumps(dataset) } # }"},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Find dispersal jumps — find_jumps_wrapper","title":"Find dispersal jumps — find_jumps_wrapper","text":"Find dispersal jumps applied find_thresholds(). Prune points selected due sector limits secondary diffusion.","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find dispersal jumps — find_jumps_wrapper","text":"","code":"find_jumps_wrapper(   dataset = grid_data,   nb_sectors = 12,   centroid = c(-75.67534, 40.41524),   gap_size = 15,   negatives = T )"},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find dispersal jumps — find_jumps_wrapper","text":"dataset data frame unique points processed, ideally dataset_unique resulting find_thresholds() nb_sectors Number sectors invasion range divided centroid long,lat coordinates introduction point gap_size Distance invasion front positive point necessary considered jump, kilometers (default: 15) negatives negative surveys considered? (default: TRUE)","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find dispersal jumps — find_jumps_wrapper","text":"Four data frames: Jumps containing jumps, Dist containing limits diffusive spread, diffusion containing diffusion points, secDiff containing secondary diffusion cells","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_jumps_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find dispersal jumps — find_jumps_wrapper","text":"","code":"if (FALSE) { # \\dontrun{ jumps <- find_jumps(dataset) } # }"},{"path":"https://nbelouard.github.io/jumpID/reference/find_secDiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Find secondary diffusion — find_secDiff","title":"Find secondary diffusion — find_secDiff","text":"Find secondary diffusion points applied find_jumps()","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_secDiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find secondary diffusion — find_secDiff","text":"","code":"find_secDiff(   potDiffusion = potDiffusion,   Jumps = Jumps,   diffusers = diffusers,   Dist = preDist,   gap_size = 15 )"},{"path":"https://nbelouard.github.io/jumpID/reference/find_secDiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find secondary diffusion — find_secDiff","text":"potDiffusion object exported find_jumps Jumps object exported find_jumps diffusers object exported find_jumps Dist object exported find_jumps gap_size Distance necessary point considered jump, kilometers (default: 15)","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_secDiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find secondary diffusion — find_secDiff","text":"data frame secDiff containing secondary diffusion points, data frame Dist containing final thresholds diffusive spread.","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_secDiff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find secondary diffusion — find_secDiff","text":"","code":"if (FALSE) { # \\dontrun{ secDiff <- find_secDiff() } # }"},{"path":"https://nbelouard.github.io/jumpID/reference/find_thresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"Find thresholds of diffusive spread — find_thresholds","title":"Find thresholds of diffusive spread — find_thresholds","text":"Find thresholds diffusive spread get list potential jumps. function identifies spatial discontinuities distribution species’ occurrences putative limit continuous, diffusive spread (.e., invasion front) outlying occurrences. function must applied attribute_sectors() find_jumps().","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_thresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find thresholds of diffusive spread — find_thresholds","text":"","code":"find_thresholds(dataset, gap_size = 15, negatives = TRUE)"},{"path":"https://nbelouard.github.io/jumpID/reference/find_thresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find thresholds of diffusive spread — find_thresholds","text":"dataset dataset processed, output attribute_sectors() gap_size Distance invasion front positive point necessary considered jump, kilometers (default: 15) negatives function verify negative surveys found spatial discontinuities? (default: TRUE)","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_thresholds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find thresholds of diffusive spread — find_thresholds","text":"Two tables: one table Thresholds containing threshold per year sector, one table potJumps containing list potential jumps find_jumps()","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/find_thresholds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find thresholds of diffusive spread — find_thresholds","text":"","code":"if (FALSE) { # \\dontrun{ thresholds <- find_thresholds(dataset) } # }"},{"path":"https://nbelouard.github.io/jumpID/reference/group_jumps.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribute groups to jumps — group_jumps","title":"Attribute groups to jumps — group_jumps","text":"Identify independent locations jump dispersal","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/group_jumps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute groups to jumps — group_jumps","text":"","code":"group_jumps(jumps, gap_size = 15)"},{"path":"https://nbelouard.github.io/jumpID/reference/group_jumps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribute groups to jumps — group_jumps","text":"jumps dataset processed gap_size Distance invasion front positive point necessary considered jump, kilometers (default: 15)","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/group_jumps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attribute groups to jumps — group_jumps","text":"table dataset additional column named group containing group number jump","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/group_jumps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attribute groups to jumps — group_jumps","text":"","code":"if (FALSE) { # \\dontrun{ new_dataset <- group_jumps(dataset) } # }"},{"path":"https://nbelouard.github.io/jumpID/reference/rarefy_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefy the jump dataset — rarefy_groups","title":"Rarefy the jump dataset — rarefy_groups","text":"Build rarefied dataset keeping centroid cluster jumps","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/rarefy_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefy the jump dataset — rarefy_groups","text":"","code":"rarefy_groups(Jump_groups)"},{"path":"https://nbelouard.github.io/jumpID/reference/rarefy_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefy the jump dataset — rarefy_groups","text":"Jump_groups dataset processed","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/rarefy_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rarefy the jump dataset — rarefy_groups","text":"table containing rarefied dataset","code":""},{"path":"https://nbelouard.github.io/jumpID/reference/rarefy_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefy the jump dataset — rarefy_groups","text":"","code":"if (FALSE) { # \\dontrun{ new_dataset <- rarefy_groups(dataset) } # }"}]
